{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/footer/footer.component.html","./src/app/header/header.component.html","./src/app/invoice-entry/invoice-entry.component.html","./src/app/item-creation/item-creation.component.html","./src/app/page-not-found-component/page-not-found-component.component.html","./src/app/party-creation/party-creation.component.html","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/footer/footer.component.css","./src/app/footer/footer.component.ts","./src/app/header/header.component.css","./src/app/header/header.component.ts","./src/app/invoice-entry/invoice-entry.component.css","./src/app/invoice-entry/invoice-entry.component.ts","./src/app/item-creation/item-creation.component.css","./src/app/item-creation/item-creation.component.ts","./src/app/page-not-found-component/page-not-found-component.component.css","./src/app/page-not-found-component/page-not-found-component.component.ts","./src/app/party-creation/party-creation.component.css","./src/app/party-creation/party-creation.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!-- header -->\\n<app-header></app-header>\\n<!-- <app-party-creation></app-party-creation> -->\\n<router-outlet></router-outlet>\\n<ag-grid-angular \\n    style=\\\"width: 500px; height: 500px;\\\" \\n    class=\\\"ag-theme-balham\\\"\\n    [rowData]=\\\"rowData | async\\\"\\n    [columnDefs]=\\\"columnDefs\\\"\\n    rowSelection=\\\"multiple\\\"\\n    >\\n</ag-grid-angular>\\n<!-- footer -->\\n<app-footer></app-footer>\"","module.exports = \"<div class=\\\"footer\\\">\\n    <p>Footer</p>\\n  </div>\"","module.exports = \"\\n<div class=\\\"header\\\">\\n    <a href=\\\"#default\\\" class=\\\"logo\\\">CompanyLogo</a>\\n    <div class=\\\"header-right\\\">\\n      <a  href=\\\"#home\\\" routerLinkActive=\\\"active\\\">Home</a>\\n      <a [routerLink]=\\\"'/party-creation'\\\" routerLinkActive=\\\"active\\\">Party creation</a>\\n      <a [routerLink]=\\\"['/item-creation']\\\" routerLinkActive=\\\"active\\\">Item Creation</a>\\n      <a [routerLink]=\\\"['/invoice-entry']\\\" routerLinkActive=\\\"active\\\">Invoice Entry</a>\\n    </div>\\n  </div>\\n\"","module.exports = \"\\n<div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n           <div class=\\\"col-md-3\\\"></div>\\n           <div class=\\\"col-md-6\\\">\\n              <h1 class=\\\"text-center text-uppercase m-5\\\">{{title}}</h1>\\n               <form [formGroup]=\\\"angForm\\\" novalidate>\\n                  <div class=\\\"form-group\\\">\\n                      <label>Party Name:</label>\\n                      <!-- <input class=\\\"form-control\\\" formControlName=\\\"pname\\\" type=\\\"text\\\"> -->\\n                      <select class=\\\"form-control\\\" formControlName=\\\"pname\\\">\\n                         <option>PRISMA GARMENTS</option>\\n                      </select>\\n                  </div>\\n                  <div *ngIf=\\\"angForm.controls['pname'].invalid && (angForm.controls['pname'].dirty || angForm.controls['pname'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                      <div *ngIf=\\\"angForm.controls['pname'].errors.required\\\">\\n                        This field is required.\\n                      </div>\\n                  </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8\\\">   \\n                      <div class=\\\"form-group\\\">\\n                          <label>Invoice Date:</label>\\n                          <input class=\\\"form-control\\\" formControlName=\\\"idate\\\" type=\\\"date\\\">\\n                      </div>\\n                      <div *ngIf=\\\"angForm.controls['idate'].invalid && (angForm.controls['idate'].dirty || angForm.controls['idate'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                          <div *ngIf=\\\"angForm.controls['idate'].errors.required\\\">\\n                          This field is required.\\n                          </div>\\n                      </div>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                      <div class=\\\"form-group\\\">\\n                      <label>Invoice No:</label>\\n                          <input class=\\\"form-control mt-2\\\" formControlName=\\\"ino\\\" type=\\\"text\\\">\\n                      </div>\\n                      <div *ngIf=\\\"angForm.controls['ino'].invalid && (angForm.controls['ino'].dirty || angForm.controls['ino'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                          <div *ngIf=\\\"angForm.controls['ino'].errors.required\\\">\\n                          This field is required.\\n                          </div>\\n                      </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label>Delivery To:</label>\\n                  <input class=\\\"form-control\\\" formControlName=\\\"delivery\\\" type=\\\"text\\\">\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['delivery'].invalid && (angForm.controls['delivery'].dirty || angForm.controls['delivery'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"angForm.controls['delivery'].errors.required\\\">\\n                    This field is required.\\n                  </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                   <div class=\\\"col-md-6\\\">   \\n                     <div class=\\\"form-group\\\">\\n                         <label>Date of Supply:</label>\\n                         <input class=\\\"form-control\\\" formControlName=\\\"dos\\\" type=\\\"date\\\">\\n                     </div>\\n                     <div *ngIf=\\\"angForm.controls['dos'].invalid && (angForm.controls['dos'].dirty || angForm.controls['dos'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                         <div *ngIf=\\\"angForm.controls['dos'].errors.required\\\">\\n                           This field is required.\\n                         </div>\\n                     </div>\\n                   </div>\\n                   <div class=\\\"col-md-6\\\">\\n                     <div class=\\\"form-group\\\">\\n                       <label>Reverse charge:</label>\\n                         <input class=\\\"form-control\\\" formControlName=\\\"rc\\\" type=\\\"text\\\">\\n                     </div>\\n                     <div *ngIf=\\\"angForm.controls['rc'].invalid && (angForm.controls['rc'].dirty || angForm.controls['rc'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                         <div *ngIf=\\\"angForm.controls['rc'].errors.required\\\">\\n                           This field is required.\\n                         </div>\\n                     </div>\\n                   </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                    <label>Transport Mode:</label>\\n                    <input class=\\\"form-control\\\" formControlName=\\\"tm\\\" type=\\\"text\\\">\\n                </div>\\n                <div *ngIf=\\\"angForm.controls['tm'].invalid && (angForm.controls['tm'].dirty || angForm.controls['tm'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"angForm.controls['tm'].errors.required\\\">\\n                      This field is required.\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                        <label>Purchase Order No:</label>\\n                        <input class=\\\"form-control\\\" formControlName=\\\"pon\\\" type=\\\"text\\\">\\n                    </div>\\n                    <div *ngIf=\\\"angForm.controls['pon'].invalid && (angForm.controls['pon'].dirty || angForm.controls['pon'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                        <div *ngIf=\\\"angForm.controls['pon'].errors.required\\\">\\n                          This field is required.\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                            <label>Place Of Supply:</label>\\n                            <input class=\\\"form-control\\\" formControlName=\\\"pos\\\" type=\\\"text\\\">\\n                        </div>\\n                        <div *ngIf=\\\"angForm.controls['pos'].invalid && (angForm.controls['pos'].dirty || angForm.controls['pos'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                            <div *ngIf=\\\"angForm.controls['pos'].errors.required\\\">\\n                              This field is required.\\n                            </div>\\n                        </div>     \\n                  <label><input type=\\\"checkbox\\\" formControlName=\\\"isTCAccepted\\\" class=\\\"mr-2\\\">IGST</label>\\n                  <div *ngIf=\\\"angForm.controls['isTCAccepted'].invalid && (angForm.controls['isTCAccepted'].dirty || angForm.controls['isTCAccepted'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                        <div *ngIf=\\\"angForm.controls['isTCAccepted'].errors.required\\\">\\n                            This field is required.\\n                        </div>\\n                  </div>\\n               <button type=\\\"submit\\\"\\n                      [disabled]=\\\"angForm.pristine || angForm.invalid\\\" class=\\\"mt-2 btn btn-outline-success btn-lg btn-block\\\">\\n                      Create\\n               </button>\\n               </form>\\n           </div>\\n        </div>\\n              \\n         <br />\\n         <div class=\\\"mt-5\\\">\\n          <p>Form value: {{ angForm.value | json }}</p>\\n          <p>Form status: {{ angForm.status | json }}</p>\\n         </div>\\n      </div>\\n              \"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n     <div class=\\\"col-md-3\\\"></div>\\n     <div class=\\\"col-md-6\\\">\\n        <h1 class=\\\"text-center text-uppercase m-5\\\">{{title}}</h1>\\n         <form [formGroup]=\\\"angForm\\\" novalidate>\\n            <div class=\\\"form-group\\\">\\n                <label>Item Name:</label>\\n                <input class=\\\"form-control\\\" formControlName=\\\"iname\\\" type=\\\"text\\\">\\n            </div>\\n            <div *ngIf=\\\"angForm.controls['iname'].invalid && (angForm.controls['iname'].dirty || angForm.controls['iname'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['iname'].errors.required\\\">\\n                  This field is required.\\n                </div>\\n            </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-8\\\">   \\n                <div class=\\\"form-group\\\">\\n                    <label>Unit Name:</label>\\n                    <input class=\\\"form-control\\\" formControlName=\\\"uname\\\" type=\\\"text\\\">\\n                </div>\\n                <div *ngIf=\\\"angForm.controls['uname'].invalid && (angForm.controls['uname'].dirty || angForm.controls['uname'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"angForm.controls['uname'].errors.required\\\">\\n                    This field is required.\\n                    </div>\\n                </div>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                <label></label>\\n                    <input class=\\\"form-control mt-2\\\" formControlName=\\\"num\\\" type=\\\"text\\\">\\n                </div>\\n                <div *ngIf=\\\"angForm.controls['num'].invalid && (angForm.controls['num'].dirty || angForm.controls['num'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"angForm.controls['num'].errors.required\\\">\\n                    This field is required.\\n                    </div>\\n                </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>HSN Code:</label>\\n            <input class=\\\"form-control\\\" formControlName=\\\"HSN\\\" type=\\\"text\\\">\\n        </div>\\n        <div *ngIf=\\\"angForm.controls['HSN'].invalid && (angForm.controls['HSN'].dirty || angForm.controls['HSN'].touched)\\\" class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['HSN'].errors.required\\\">\\n              This field is required.\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n             <div class=\\\"col-md-6\\\">   \\n               <div class=\\\"form-group\\\">\\n                   <label>purchase Rate:</label>\\n                   <input class=\\\"form-control\\\" formControlName=\\\"prate\\\" type=\\\"text\\\">\\n               </div>\\n               <div *ngIf=\\\"angForm.controls['prate'].invalid && (angForm.controls['prate'].dirty || angForm.controls['prate'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                   <div *ngIf=\\\"angForm.controls['prate'].errors.required\\\">\\n                     This field is required.\\n                   </div>\\n               </div>\\n             </div>\\n             <div class=\\\"col-md-6\\\">\\n               <div class=\\\"form-group\\\">\\n                 <label>Selling Rate:</label>\\n                   <input class=\\\"form-control\\\" formControlName=\\\"srate\\\" type=\\\"text\\\">\\n               </div>\\n               <div *ngIf=\\\"angForm.controls['srate'].invalid && (angForm.controls['srate'].dirty || angForm.controls['srate'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                   <div *ngIf=\\\"angForm.controls['srate'].errors.required\\\">\\n                     This field is required.\\n                   </div>\\n               </div>\\n             </div>\\n        </div>\\n        <label><input type=\\\"checkbox\\\" formControlName=\\\"isTCAccepted\\\" class=\\\"mr-2\\\">Deactivate this item</label>\\n            <div *ngIf=\\\"angForm.controls['isTCAccepted'].invalid && (angForm.controls['isTCAccepted'].dirty || angForm.controls['isTCAccepted'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"angForm.controls['isTCAccepted'].errors.required\\\">\\n                      This field is required.\\n                  </div>\\n            </div>\\n         <button type=\\\"submit\\\"\\n                [disabled]=\\\"angForm.pristine || angForm.invalid\\\" class=\\\"mt-2 btn btn-outline-success btn-lg btn-block\\\">\\n                Create\\n         </button>\\n         </form>\\n     </div>\\n  </div>\\n        \\n   <br />\\n   <div class=\\\"mt-5\\\">\\n    <p>Form value: {{ angForm.value | json }}</p>\\n    <p>Form status: {{ angForm.status | json }}</p>\\n   </div>\\n</div>\\n        \"","module.exports = \"<p>page-not-found-component works!</p>\\n\"","module.exports = \"\\n<div class=\\\"container\\\">\\n \\n<div class=\\\"row\\\">\\n <div class=\\\"col-md-3\\\"></div>\\n <div class=\\\"col-md-6\\\">\\n    <h1 class=\\\"text-center text-uppercase m-5\\\">{{title}}</h1>\\n  <form [formGroup]=\\\"angForm\\\" novalidate>\\n    <div class=\\\"form-group\\\">\\n        <label>Party Name:</label>\\n        <input class=\\\"form-control\\\" formControlName=\\\"name\\\" type=\\\"text\\\">\\n    </div>\\n    <div *ngIf=\\\"angForm.controls['name'].invalid && (angForm.controls['name'].dirty || angForm.controls['name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['name'].errors.required\\\">\\n          Party Name is required.\\n        </div>\\n    </div>\\n     <div class=\\\"form-group\\\">\\n        <label>Address:</label>\\n        <textarea class=\\\"form-control\\\" formControlName=\\\"address\\\"></textarea>\\n    </div>\\n    <div *ngIf=\\\"angForm.controls['address'].invalid && (angForm.controls['address'].dirty || angForm.controls['address'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['address'].errors.required\\\">\\n          email is required.\\n        </div>\\n    </div>\\n\\n  <div class=\\\"form-group\\\">\\n      <label>State Code:</label>\\n      <input class=\\\"form-control\\\" formControlName=\\\"state\\\" type=\\\"text\\\">\\n  </div>\\n  <div *ngIf=\\\"angForm.controls['state'].invalid && (angForm.controls['state'].dirty || angForm.controls['state'].touched)\\\" class=\\\"alert alert-danger\\\">\\n      <div *ngIf=\\\"angForm.controls['state'].errors.required\\\">\\n        state is required.\\n      </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n <div class=\\\"col-md-8\\\">   \\n<div class=\\\"form-group\\\">\\n    <label>Opening Balance:</label>\\n    <input class=\\\"form-control\\\" formControlName=\\\"balance\\\" type=\\\"text\\\">\\n</div>\\n<div *ngIf=\\\"angForm.controls['balance'].invalid && (angForm.controls['balance'].dirty || angForm.controls['balance'].touched)\\\" class=\\\"alert alert-danger\\\">\\n    <div *ngIf=\\\"angForm.controls['balance'].errors.required\\\">\\n      Opening Balance is required.\\n    </div>\\n</div>\\n</div>\\n<div class=\\\"col-md-4\\\">\\n<div class=\\\"form-group\\\">\\n  <label></label>\\n    <input class=\\\"form-control mt-2\\\" formControlName=\\\"num\\\" type=\\\"text\\\">\\n</div>\\n<div *ngIf=\\\"angForm.controls['num'].invalid && (angForm.controls['num'].dirty || angForm.controls['num'].touched)\\\" class=\\\"alert alert-danger\\\">\\n    <div *ngIf=\\\"angForm.controls['num'].errors.required\\\">\\n      This field is required.\\n    </div>\\n</div>\\n</div>\\n</div>\\n<div class=\\\"form-group\\\">\\n    <label>GSTIN No:</label>\\n    <input class=\\\"form-control\\\" formControlName=\\\"gst\\\" type=\\\"text\\\">\\n</div>\\n<div *ngIf=\\\"angForm.controls['gst'].invalid && (angForm.controls['gst'].dirty || angForm.controls['gst'].touched)\\\" class=\\\"alert alert-danger\\\">\\n    <div *ngIf=\\\"angForm.controls['gst'].errors.required\\\">\\n      This field is required.\\n    </div>\\n</div>\\n<div class=\\\"form-group\\\">\\n    <label>Phone No:</label>\\n    <input class=\\\"form-control\\\" formControlName=\\\"phone\\\" type=\\\"text\\\">\\n</div>\\n<div *ngIf=\\\"angForm.controls['phone'].invalid && (angForm.controls['phone'].dirty || angForm.controls['phone'].touched)\\\" class=\\\"alert alert-danger\\\">\\n    <div *ngIf=\\\"angForm.controls['phone'].errors.required\\\">\\n      This field is required.\\n    </div>\\n</div>\\n<div class=\\\"form-group\\\">\\n    <label>Party Type:</label>\\n    <input class=\\\"form-control\\\" formControlName=\\\"ptype\\\" type=\\\"text\\\">\\n</div>\\n<div *ngIf=\\\"angForm.controls['ptype'].invalid && (angForm.controls['ptype'].dirty || angForm.controls['ptype'].touched)\\\" class=\\\"alert alert-danger\\\">\\n    <div *ngIf=\\\"angForm.controls['ptype'].errors.required\\\">\\n      This field is required.\\n    </div>\\n</div>\\n      <button type=\\\"submit\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\" class=\\\"mt-5 btn btn-outline-success btn-lg btn-block\\\">\\n        Create\\n    </button>\\n</form>\\n </div>\\n</div>\\n\\n  \\n  <br />\\n  <div class=\\\"mt-5\\\">\\n    <p>Form value: {{ angForm.value | json }}</p>\\n    <p>Form status: {{ angForm.status | json }}</p>\\n  </div>\\n</div>\\n\\n\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PartyCreationComponent } from './party-creation/party-creation.component';\nimport { ItemCreationComponent } from './item-creation/item-creation.component';\nimport { InvoiceEntryComponent } from './invoice-entry/invoice-entry.component';\nimport { PageNotFoundComponentComponent } from './page-not-found-component/page-not-found-component.component';\n\nconst routes: Routes = [\n  { path:  'party-creation', component: PartyCreationComponent },\n  { path:  'item-creation', component: ItemCreationComponent },\n  { path:  'invoice-entry', component: InvoiceEntryComponent },\n  { path:  '**' , component: PageNotFoundComponentComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'labelpress';\n  columnDefs = [\n    {headerName: 'Make', field: 'make', sortable: true, filter: true , checkboxSelection: true},\n    {headerName: 'Model', field: 'model' , sortable: true, filter: true },\n    {headerName: 'Price', field: 'price' , sortable: true, filter: true}\n];\n\nrowData: any;\nconstructor(private http: HttpClient) {\n\n}\nngOnInit() {\n  this.rowData = this.http.get('https://api.myjson.com/bins/15psn9');\n}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { PartyCreationComponent } from './party-creation/party-creation.component';\nimport { ItemCreationComponent } from './item-creation/item-creation.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { InvoiceEntryComponent } from './invoice-entry/invoice-entry.component';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PageNotFoundComponentComponent } from './page-not-found-component/page-not-found-component.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    PartyCreationComponent,\n    ItemCreationComponent,\n    InvoiceEntryComponent,\n    PageNotFoundComponentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AgGridModule.withComponents([]),\n    HttpClientModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    NoopAnimationsModule,\n    MatButtonModule,\n    MatCheckboxModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".footer {\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    top : 80%;\\r\\n    width: 100%;\\r\\n    background-color:#f1f1f1;\\r\\n    color: white;\\r\\n    text-align: center;\\r\\n }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksT0FBTztJQUNQLFNBQVM7SUFDVCxTQUFTO0lBQ1QsV0FBVztJQUNYLHdCQUF3QjtJQUN4QixZQUFZO0lBQ1osa0JBQWtCO0NBQ3JCIiwiZmlsZSI6InNyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvb3RlciB7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgdG9wIDogODAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiNmMWYxZjE7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiB9Il19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\r\\n.header {\\r\\n    overflow: hidden;\\r\\n    background-color: #f1f1f1;\\r\\n    padding: 20px 10px;\\r\\n  }\\r\\n  \\r\\n  .header a {\\r\\n    float: left;\\r\\n    color: black;\\r\\n    text-align: center;\\r\\n    padding: 12px;\\r\\n    text-decoration: none;\\r\\n    font-size: 18px; \\r\\n    line-height: 25px;\\r\\n    border-radius: 4px;\\r\\n  }\\r\\n  \\r\\n  .header a.logo {\\r\\n    font-size: 25px;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n  \\r\\n  .header a:hover {\\r\\n    background-color: #ddd;\\r\\n    color: black;\\r\\n  }\\r\\n  \\r\\n  /* .header a.active {\\r\\n    background-color: dodgerblue;\\r\\n    color: white;\\r\\n  } */\\r\\n  \\r\\n  .header-right  {\\r\\n    float: right;\\r\\n  }\\r\\n  \\r\\n  .header-right a.active{\\r\\n    background-color: dodgerblue;\\r\\n    color: white;\\r\\n  }\\r\\n  \\r\\n  @media screen and (max-width: 500px) {\\r\\n    .header a {\\r\\n      float: none;\\r\\n      display: block;\\r\\n      text-align: left;\\r\\n    }\\r\\n    \\r\\n    .header-right {\\r\\n      float: none;\\r\\n    }\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLGdCQUFnQjtJQUNoQix5QkFBeUI7SUFDekIsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLHFCQUFxQjtJQUNyQixlQUFlO0lBQ2YsaUJBQWlCO0lBQ2pCLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLGVBQWU7SUFDZixpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSxzQkFBc0I7SUFDdEIsWUFBWTtFQUNkOztFQUVBOzs7S0FHRzs7RUFFSDtJQUNFLFlBQVk7RUFDZDs7RUFDQTtJQUNFLDRCQUE0QjtJQUM1QixZQUFZO0VBQ2Q7O0VBQ0E7SUFDRTtNQUNFLFdBQVc7TUFDWCxjQUFjO01BQ2QsZ0JBQWdCO0lBQ2xCOztJQUVBO01BQ0UsV0FBVztJQUNiO0VBQ0YiLCJmaWxlIjoic3JjL2FwcC9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmhlYWRlciB7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTtcclxuICAgIHBhZGRpbmc6IDIwcHggMTBweDtcclxuICB9XHJcbiAgXHJcbiAgLmhlYWRlciBhIHtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcGFkZGluZzogMTJweDtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIGZvbnQtc2l6ZTogMThweDsgXHJcbiAgICBsaW5lLWhlaWdodDogMjVweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICB9XHJcbiAgXHJcbiAgLmhlYWRlciBhLmxvZ28ge1xyXG4gICAgZm9udC1zaXplOiAyNXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgfVxyXG4gIFxyXG4gIC5oZWFkZXIgYTpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkO1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gIH1cclxuICBcclxuICAvKiAuaGVhZGVyIGEuYWN0aXZlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGRvZGdlcmJsdWU7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgfSAqL1xyXG4gIFxyXG4gIC5oZWFkZXItcmlnaHQgIHtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICB9XHJcbiAgLmhlYWRlci1yaWdodCBhLmFjdGl2ZXtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGRvZGdlcmJsdWU7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgfVxyXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUwMHB4KSB7XHJcbiAgICAuaGVhZGVyIGEge1xyXG4gICAgICBmbG9hdDogbm9uZTtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5oZWFkZXItcmlnaHQge1xyXG4gICAgICBmbG9hdDogbm9uZTtcclxuICAgIH1cclxuICB9Il19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludm9pY2UtZW50cnkvaW52b2ljZS1lbnRyeS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-invoice-entry',\n  templateUrl: './invoice-entry.component.html',\n  styleUrls: ['./invoice-entry.component.css']\n})\nexport class InvoiceEntryComponent  {\n  title = 'invoice entry';\n  angForm: FormGroup;\n  constructor(private fb: FormBuilder) {\n   this.createForm();\n }\n  createForm() {\n   this.angForm = this.fb.group({\n      pname: ['', Validators.required ],\n      idate: ['', Validators.required ],\n      ino: ['', Validators.required],\n      delivery: ['', Validators.required],\n      dos: ['', Validators.required],\n      rc: ['', Validators.required],\n      tm: ['', Validators.required],\n      pon: ['', Validators.required],\n      pos: ['', Validators.required],\n      isTCAccepted: ['', Validators.required]\n   });\n }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2l0ZW0tY3JlYXRpb24vaXRlbS1jcmVhdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-item-creation',\n  templateUrl: './item-creation.component.html',\n  styleUrls: ['./item-creation.component.css']\n})\nexport class ItemCreationComponent  {\n  title = 'Item Creation';\n  angForm: FormGroup;\n  constructor(private fb: FormBuilder) {\n   this.createForm();\n }\n  createForm() {\n   this.angForm = this.fb.group({\n      iname: ['', Validators.required ],\n      uname: ['', Validators.required ],\n      num: ['', Validators.required],\n      HSN: ['', Validators.required],\n      prate: ['', Validators.required],\n      srate: ['', Validators.required],\n      isTCAccepted: ['', Validators.required]\n   });\n }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2Utbm90LWZvdW5kLWNvbXBvbmVudC9wYWdlLW5vdC1mb3VuZC1jb21wb25lbnQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found-component',\n  templateUrl: './page-not-found-component.component.html',\n  styleUrls: ['./page-not-found-component.component.css']\n})\nexport class PageNotFoundComponentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhcnR5LWNyZWF0aW9uL3BhcnR5LWNyZWF0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\n@Component({\n  selector: 'app-party-creation',\n  templateUrl: './party-creation.component.html',\n  styleUrls: ['./party-creation.component.css']\n})\nexport class PartyCreationComponent  {\n  title = 'Party Creation';\n\n  angForm: FormGroup;\n  constructor(private fb: FormBuilder) {\n   this.createForm();\n }\n  createForm() {\n   this.angForm = this.fb.group({\n      name: ['', Validators.required ],\n      address: ['', Validators.required ],\n      state: ['', Validators.required],\n      balance: ['', Validators.required],\n      num: ['', Validators.required],\n      gst: ['', Validators.required],\n      phone: ['', Validators.required],\n      ptype: ['', Validators.required],\n   });\n }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}